name : DevSecOps Pipleline with Deployment
on:
  push:
    branches: [master, main]
jobs:
  gitleaks:
    name: gitleaks
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: gitleaks/gitleaks-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITLEAKS_LICENSE: ${{ secrets.GITLEAKS_LICENSE}}
  njsscan:
    runs-on: ubuntu-latest
    name: njsscan code scanning
    needs: [gitleaks]
    steps:

    - name: Checkout the code
      uses: actions/checkout@v4.2.1

    - name: nodejsscan scan
      id: njsscan
      uses: ajinabraham/njsscan-action@v7
      with:
        args: '. --sarif --output results.sarif || true'

    - name: Upload njsscan report
      uses: github/codeql-action/upload-sarif@v3
      with:
        sarif_file: results.sarif

  semgrep:
    runs-on: ubuntu-latest
    name: Semgrep Scan
    needs: [gitleaks]
    steps:
      - name: Checkout the Code
        uses: actions/checkout@v4.2.1

      - name: Install Semgrep
        run: pip install semgrep

      - name: Semgrep Scan
        run: semgrep scan --output=semgrep.sarif --sarif
        continue-on-error: true

      - name: Upload Semgrep Report
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: semgrep.sarif

  npm-audit-scan:
    runs-on: ubuntu-latest
    name: NPM Audit Scan
    needs: [njsscan, semgrep]
    steps:
      - name: Checkout the code
        uses: actions/checkout@v4.2.1

      - name: Install and Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - run: npm ci

      - name: NPM Audit
        run: npm audit --json >> npm-audit-output.json
        continue-on-error: true

      - name: Upload the NPM Audit output file
        uses: actions/upload-artifact@v4
        with:
          name: npm-output-file
          path: npm-audit-output.json

  retire-scan:
    runs-on: ubuntu-latest
    name: Retire.js Scan
    needs: [njsscan, semgrep]
    steps:
      - name: Checkout the code
        uses: actions/checkout@v4.2.1

      - name: Install and Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - run: npm ci

      - run: npm install -g retire

      - name: Retire.js Scan
        run: retire --output json --outputFile retire-output.json
        continue-on-error: true

      - name: Upload the Retire.js output file
        uses: actions/upload-artifact@v4
        with:
          name: retire-output-file
          path: retire-output.json

  hadolint:
    runs-on: ubuntu-latest
    name: Hadolint Scan for Docker Files
    needs: [retire-scan]
    steps:
      - name: Checkout the Code
        uses: actions/checkout@v4.2.1

      - name: Run Hadolint
        uses: hadolint/hadolint-action@v3.1.0
        with:
          dockerfile: Dockerfile
          format: sarif
          output-file: dockerscan-results.sarif
        continue-on-error: true

      - name: Upload Dockerscan Results
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: dockerscan-results.sarif


  build-and-trivy-scan:
    runs-on: ubuntu-latest
    needs: [hadolint, trivy-scan]
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Login to the Dockerhub
      uses: docker/login-action@v3.3.0
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push
      uses: docker/build-push-action@v6
      with:
        push: true
        # tags: ${{ secrets.DOCKER_USERNAME }}/juice-shop:${{ github.sha }}
        tags: ${{ secrets.DOCKER_USERNAME }}/juice-shop:${{ github.run_number  }}

    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@0.28.0
      with:
        image-ref: '${{ secrets.DOCKER_USERNAME }}/juice-shop:${{ github.run_number  }}'
        format: 'sarif'
        output: 'trivy-results.sarif'
    
    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v3
      if: always()
      with:
        sarif_file: 'trivy-results.sarif'

  # Deploy to Ubuntu EC2 Instance, with Private Key, as a Docker Container
  deploy:
    runs-on: ubuntu-latest
    needs: [build-and-trivy-scan]
    steps:
    - name: Deploy to EC2
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.EC2_IP }}
        username: ubuntu
        key: ${{ secrets.EC2_KEY }}
        script: |
          podman pull docker.io/${{ secrets.DOCKER_USERNAME }}/juice-shop:${{ github.run_number  }}
          podman stop $(podman ps -a -q) || true
          podman rm $(podman ps -a -q) || true
          podman run -d --name juice-shop -p 80:3000 docker.io/${{ secrets.DOCKER_USERNAME }}/juice-shop:${{ github.run_number  }}

  zap_scan:
    runs-on: ubuntu-latest
    name: DAST
    needs: [deploy]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: ZAP Scan
        uses: zaproxy/action-baseline@v0.13.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          target: 'http://43.205.99.133'
          rules_file_name: '.zap/rules.tsv'
          cmd_options: '-a -j'
